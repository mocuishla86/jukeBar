{"version":3,"sources":["logo.svg","components/Main/Main.jsx","components/auth/service.js","components/Signup/Signup.jsx","components/Login/Login.jsx","components/Login/SpotifyRedirect.jsx","components/Profile/Profile.jsx","components/party/party.js","components/Playlists/Playlists.jsx","components/Addsong/Addsong.jsx","components/trackService/trackService.js","components/Search/Search.jsx","components/ProfileEdit/ProfileEdit.jsx","components/PlaylistDetails/PlaylistDetails.jsx","components/MainUser.js/MainUser.jsx","components/CreateParty/CreateParty.jsx","components/spotifyService/spotifyService.js","components/CreateSpotifyParty/CreateSpotifyParty.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Main","react_default","a","createElement","class","Link","to","Component","AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","catch","error","console","log","login","validateStatus","status","edit","put","loggedin","get","loginSpotify","code","axios","create","baseURL","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_e$target","target","name","value","setState","defineProperty","handleSubmit","preventDefault","state","getUser","onChange","type","id","placeholder","onClick","Login","JSON","stringify","logged","spotifyLoginUrl","theUser","window","location","className","htmlFor","qs","require","SpotifyRedirect","setTimeout","parse","search","ignoreQueryPrefix","Redirect","Profile","PartyService","getParties","createParty","partyName","getPlayList","playlistId","Playlists","parties","objectSpread","playlists","err","map","party","index","key","_id","Addsong","TrackService","getTrack","searchTrack","track","userId","addTrack","partyId","Search","tracks","trackHere","message","match","params","songAdded","_this2","src","image","alt","album","ProfileEdit","PlaylistDetails","playlistReturnedByTheService","playlist","undefined","created_at","MainUser","CreateParty","partySaved","SpotifyService","getSpotifyParties","createSpotifyParty","getSpotifyPlayList","CreateSpotifyParty","App","userObj","loggedInUser","Switch","Route","exact","path","component","render","Signup_Signup","Login_Login","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e893b3b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <div class=\"main-login-signup\">\n        \n        <p>Do you have an account?</p>\n        <p><Link to=\"/Login\">Login</Link></p> or\n       <p><Link to=\"/Signup\">Signup</Link></p>\n        \n      </div>\n    )\n  }\n}\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: 'http://localhost:3001/auth',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post(\"signup\", { username, password })\n      .then(response => response.data)\n      .catch(error => console.log(error))\n  }\n\n  login = (username, password) => {\n    return this.service.post(\"login\", { username, password },{\n      validateStatus: status => {\n        return status >= 200 && status < 300; // Reject only if the status code is greater than or equal to 500\n      }})\n      .then(response => {\n        return response.data\n      })\n      .catch(error => {\n        console.log(error)\n        //https://medium.com/front-end-weekly/error-propagation-in-javascript-with-error-translation-pattern-78cf7178fe92\n        throw error\n      })\n  }\n\n  edit = (username) => {\n    return this.service.put(\"edit\", { username })\n      .then(response => response.data)\n      .catch(error => console.log(error))\n  }\n\n\n  loggedin = () => {\n    return this.service.get(\"loggedin\")\n      .then(response => response.data)\n  }\n\n    loginSpotify = (code) =>  {\n        return this.service.post(\"login-spotify\", {code },{\n            validateStatus: status => {\n                return status >= 200 && status < 300; // Reject only if the status code is greater than or equal to 500\n            }})\n            .then(response => {\n                return response.data\n            })\n            .catch(error => {\n                console.log(error)\n                //https://medium.com/front-end-weekly/error-propagation-in-javascript-with-error-translation-pattern-78cf7178fe92\n                throw error\n            })\n    }\n}\n\nexport default AuthService;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/service\";\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\"\n        });\n        \n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    console.log(this.state)\n    return (\n      <div>\n        <h2>Sign up!</h2>\n        \n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          id=\"username\"\n          name=\"username\"\n          value={this.state.username}\n          placeholder=\"Username\"\n        /><br />\n        \n        <input\n          onChange={this.handleChange}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          placeholder=\"Password\"\n        />\n        <br />\n        <button onClick={this.handleSubmit}>Create your account</button>\n        \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport AuthService from '../auth/service';\nimport { Redirect } from 'react-router'\n\nexport default class Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { username: 'marujon', password: '1111' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n\nconsole.log(\"Respuesta login: \" + JSON.stringify(response))\n        this.setState({\n          username: username,\n          password: password,\n          error: false,\n          logged: true,\n            spotifyLoginUrl: response.spotifyLoginUrl\n        });\n\n        this.props.getUser(response.theUser)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n\n  render() {\n    //https://stackoverflow.com/questions/43230194/how-to-use-redirect-in-the-new-react-router-dom-of-reactjs\n    const { logged } = this.state;\n\n    if (logged) {\n      window.location = this.state.spotifyLoginUrl\n      return null;\n    }\n\n    return (\n      <div class=\"main-login-signup\">\n       <h1>Log in</h1>\n        <div className=\"left-column\">\n          <label htmlFor=\"username\">Username</label>\n          <input onChange={this.handleChange} type=\"text\" id=\"username\" name=\"username\" value={this.state.username} />\n          <br />\n          <label htmlFor=\"password\">Password</label>\n          <input onChange={this.handleChange} type=\"password\" id=\"password\" name=\"password\" value={this.state.password} />\n          </div>\n          <br />\n          <button onClick={this.handleSubmit}>Log in</button>\n          <p>{this.state.error ? 'Wrong user or password': ''}</p>\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\nimport AuthService from '../auth/service';\nimport { Redirect } from 'react-router';\nconst qs = require('query-string');\n\nexport default class SpotifyRedirect extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { logged:false };\n    this.service = new AuthService();\n\n    setTimeout( () => {\n        console.log(\"Logging to spotify\")\n        //https://stackoverflow.com/a/37568368/4251534\n        const code = qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).code;\n\n        this.service.loginSpotify(code)\n            .then(response => {\n                console.log(\"Logged to spotify\")\n                this.setState({\n                    logged: true\n                });\n            })\n            .catch(error => {\n                console.log(\"Not logged to spotify\")\n                this.setState({\n                    error: true\n                });\n            })\n    },1000)\n  }\n\n  render() {\n    //https://stackoverflow.com/questions/43230194/how-to-use-redirect-in-the-new-react-router-dom-of-reactjs\n    const { logged } = this.state;\n\n    if (logged) {\n      return <Redirect to='/profile'/>;\n    }\n\n    return (\n      <div class=\"main-login-signup\">\n       <h1>Login to Spotify...</h1>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <div>\n       <p>My profile</p>\n        <p><Link to=\"/profile/edit\">Edit</Link></p>\n        <p><Link to=\"/create-party\">Create Playlist</Link></p>\n        <p><Link to=\"/playlists\">My playlists</Link></p>\n   \n      </div>\n    )\n  }\n}\n","import axios from \"axios\";\n\nexport default class PartyService {\n  constructor() {\n    let service = axios.create({\n      baseURL: \"http://localhost:3001/party\",\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  getParties = () => {\n    return this.service.get(\"/\").then(data => data.data);\n  };\n\n  createParty = partyName => {\n    return this.service\n      .post(\"/\", { partyName })\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n        throw error;\n      });\n  };\n\n\n  getPlayList = playlistId => {\n    return this.service.get('/'+playlistId)\n    .then(data => {\n      let onePlaylist = data.data;\n      return onePlaylist;\n    })\n  }\n\n  // addSong = songId => {\n  //   return this.service\n  //   .post(\"/addsong\", {songId})\n  //   .then(response => response.data)\n  //   .catch(error => {\n  //     console.log(error);\n  //     throw error;\n  //   })\n  // }\n}\n","import React, { Component } from \"react\";\nimport PartyService from \"../party/party\";\nimport { Link } from \"react-router-dom\";\n\n\n\nexport default class Playlists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlists: []\n    };\n\n    this.PartyService = new PartyService()\n    this.getParties()\n    \n  }\n\n  getParties = () => {\n    this.PartyService.getParties()\n    .then(parties => {\n      this.setState({...this.state, playlists:parties.data})\n    })\n    .catch(err => console.log(err))\n  }\n\n\n  render() {\n    //https://stackoverflow.com/a/44860918\n    return (\n      <div>\n      <h2>My Playlists</h2>\n      {this.state.playlists.map((party, index)=>{\n        return(\n          <div key={index}>\n          <div>\n            <p>Party name: {party.partyName} <Link to={\"/playlists-detail/\"+party._id}><h4 className=\"go-link\">GO!</h4></Link></p>\n           \n          </div>\n          </div>\n        )\n      })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Addsong extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import axios from \"axios\";\n\nexport default class TrackService {\n  constructor() {\n    let service = axios.create({\n      baseURL: \"http://localhost:3001/tracks\",\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  getTrack = () => {\n    return this.service.get(\"/\").then(data => data.data);\n  };\n\n  searchTrack = (track, userId) => {\n    return this.service\n      .post(\"/search\", { track, userId })\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n        throw error;\n      });\n  };\n\n  addTrack = (track, partyId) => {\n    return this.service\n      .post(\"/\", { track, partyId })\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n        throw error;\n      });\n  };\n\n}","import React, { Component } from 'react'\nimport { Redirect } from 'react-router';\nimport TrackService from \"../trackService/trackService\";\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tracks: [] };\n    this.service = new TrackService();\n  }\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const track = this.state.track;\n    \n    \n    this.service\n      .searchTrack(track)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          tracks:response,\n          trackHere: true,\n          message: \"your track\",\n\n        });\n      })\n      .catch(error => {\n        this.setState({\n          message: \"No track yet\"\n        });\n      });\n  };\n\n  addTrack = track => {\n    const partyId = this.props.match.params.partyId;\n\n   this.service.addTrack(track,partyId)\n     .then( response => {\n        this.setState({\n          songAdded: true\n        });\n     })\n     .catch(error => {\n       this.setState({\n         message: \"Error adding song\"\n       });\n     });\n  };\n\n\n\n  render() {\n    const partyId = this.props.match.params.partyId;\n    if(this.state.songAdded) {\n      return <Redirect to={\"/playlists-detail/\"+partyId} />; \n    }\n    \n\n    return (\n      <div>\n        <p>Search a song!</p>\n        <div className=\"left-column\">\n          <div>\n            \n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              id=\"track\"\n              name=\"track\"\n              placeholder = \"Search\"\n              value={this.state.track}\n            />\n          </div>\n        </div>\n        <br />\n        <button onClick={this.handleSubmit}>Go!</button>\n        <div>\n          {this.state.tracks.map((track, index)=>{\n            return(\n              <div key={index}>\n              <div className=\"info-track\">\n                <h3>{track.name}</h3>\n                <img src={track.image} alt={track.album}/>\n                <button onClick={() => this.addTrack(track)}>Add to party!</button>\n              </div>\n              </div>\n            )\n          })}\n        </div>\n        <span>{this.state.message}</span>\n        \n      </div>\n    )\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/service\";\n\nexport default class ProfileEdit extends Component {\n  \n  \n  render() {\n    return (\n      \n      <div>\n\n        <Link to=\"/profile\">Update</Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PartyService from \"../party/party\";\nimport { Link } from \"react-router-dom\";\n\nexport default class PlaylistDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playlist: undefined\n    };\n\n    this.PartyService = new PartyService();\n    this.getPlayList();\n  }\n\n  getPlayList = () => {\n    console.log(this.state)\n     //https://stackoverflow.com/a/44860918\n    let playlistId = this.props.match.params.partyId;\n    console.log(playlistId)\n    this.PartyService.getPlayList(playlistId)\n      .then(playlistReturnedByTheService => {\n        console.log(playlistReturnedByTheService);\n\n        this.setState({ playlist: playlistReturnedByTheService });\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    if (!this.state.playlist) {\n      return <div>Cargando...</div>;\n    }\n\n    return (\n      <div>\n        <div>Playlist: {this.state.playlist.partyName}</div>\n\n        <div>Created at: {this.state.playlist.created_at}</div>\n          \n        <p><Link to={\"/add-track-to-party/\"+this.state.playlist._id}>add song</Link></p>\n      </div>\n    );\n  }\n}\n//<img src={this.state.beer.image_url} alt=\"beerImage\"/>\n","import React, { Component } from 'react'\n\nexport default class MainUser extends Component {\n  render() {\n    return (\n      <div>\n        MAIN USER\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PartyService from \"../party/party\";\nimport { Redirect } from \"react-router\";\n\nexport default class CreateParty extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { partyName: \"\" };\n    this.service = new PartyService();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const partyName = this.state.partyName;\n\n    this.service\n      .createParty(partyName)\n      .then(response => {\n        this.setState({\n          partySaved: true,\n          message: \"Party saved\"\n        });\n      })\n      .catch(error => {\n        this.setState({\n          message: \"Party not saved\"\n        });\n      });\n  };\n\n  render() {\n    const { partySaved } = this.state;\n\n    if (partySaved) {\n      return <Redirect to=\"/playlists\" />;\n    }\n\n    return (\n      <div>\n        <p>Create Party</p>\n        <div className=\"left-column\">\n          <div>\n            \n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              id=\"partyName\"\n              name=\"partyName\"\n              placeholder = \"Party name\"\n              value={this.state.partyName}\n            />\n          </div>\n        </div>\n        <br />\n        <button onClick={this.handleSubmit}>Save</button>\n        <span>{this.state.message}</span>\n        <p>\n          <Link to=\"/playlists\">My playlists</Link>\n        </p>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport default class SpotifyService {\n  constructor(){\n    let service = axios.create({\n      baseURL: \"http://localhost:3001/spotify\", //hte qué url va aqui?\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  getSpotifyParties = () => {\n    return this.service.get(\"/\").then(data => data.data);\n  }\n\n  createSpotifyParty = partyName => {\n    return this.service\n      .post(\"/\", { partyName })\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n        throw error;\n      });\n  };\n\n  getSpotifyPlayList = () => {\n    return this.service.get('/')\n    .then(data => {\n      let onePlaylist = data.data;\n      return onePlaylist;\n    })\n  }\n}","import React, { Component } from 'react';\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport SpotifyService from \"../spotifyService/spotifyService\";\n\nexport default class CreateSpotifyParty extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { partyName: \"\" };\n    this.service = new SpotifyService();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const partyName = this.state.partyName;\n\n    this.service\n      .createSpotifyParty(partyName)\n      .then(response => {\n        this.setState({\n          partySaved: true,\n          message: \"Party saved\"\n        });\n      })\n      .catch(error => {\n        this.setState({\n          message: \"Party not saved\"\n        });\n      });\n  };\n\n  \n  render() {\n    const { partySaved } = this.state;\n\n    if (partySaved) {\n      return <Redirect to=\"/playlists\" />;\n    }\n    return (\n      <div>\n      <p>Create Spotify Party</p>\n      <div className=\"left-column\">\n        <div>\n          \n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            id=\"partyName\"\n            name=\"partyName\"\n            placeholder = \"Party name\"\n            value={this.state.partyName}\n          />\n        </div>\n      </div>\n      <br />\n      <button onClick={this.handleSubmit}>Save</button>\n      <span>{this.state.message}</span>\n      <p>\n        <Link to=\"/playlists\">My playlists</Link>\n      </p>\n    </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Main from \"./components/Main/Main\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\nimport SpotifyRedirect from \"./components/Login/SpotifyRedirect\";\nimport Profile from \"./components/Profile/Profile\"\nimport Playlists from \"./components/Playlists/Playlists\";\nimport Addsong from \"./components/Addsong/Addsong\";\nimport Search from \"./components/Search/Search\";\nimport ProfileEdit from \"./components/ProfileEdit/ProfileEdit\";\nimport PlaylistDetails from \"./components/PlaylistDetails/PlaylistDetails\";\nimport MainUser from \"./components/MainUser.js/MainUser\";\nimport CreateParty from \"./components/CreateParty/CreateParty\";\nimport service from \"./components/auth/service\";\nimport CreateSpotifyParty from \"./components/CreateSpotifyParty/CreateSpotifyParty\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { loggedInUser: null }\n    this.service = new service()\n  }\n\n  getUser = (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n\n  \n\n\n  render() {\n    return (\n      <div className=\"App\">\n      {/* <Main /> */}\n      <h2 class=\"main-logo\">jukeBar</h2>\n     \n      \n        <Switch>\n          <Route exact path=\"/main\" component={Main} />\n          <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />}/>\n          <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />}/>\n          <Route exact path=\"/login-spotify\" component={SpotifyRedirect}/>\n          <Route exact path=\"/profile\" component={Profile}/>   \n          <Route exact path=\"/profile/edit\" component={ProfileEdit}/>\n          <Route exact path=\"/create-party\" component={CreateParty}/>\n          <Route exact path=\"/playlists\" component={Playlists}/>\n          <Route exact path=\"/playlists-detail/:partyId\" component={PlaylistDetails}/>\n          <Route exact path=\"/addsong-vote\" component={Addsong}/>\n          <Route exact path=\"/main-user\" component={MainUser}/>\n          <Route exact path=\"/add-track-to-party/:partyId\" component={Search}/>\n          <Route exact path=\"/create-spotify-party\" component={CreateSpotifyParty}/>\n        </Switch>\n        <Link to=\"/main\" className=\"Home\">HOME</Link>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  (\n  <Router>\n    <App />\n  </Router>)\n\n  ,document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}